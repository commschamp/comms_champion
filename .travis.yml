dist: bionic
language: cpp
sudo: true
notifications:
  email:
    on_success: change
    on_failure: always
    
    
matrix:
  include:
    - os: linux
      addons:
        apt:
          packages:
            - g++-4.8    
      env: _CC=gcc-4.8 _CXX=g++-4.8 _BUILD="-DCC_BUILD_TOOLS_LIBRARY=OFF"
    - os: linux
      addons:
        apt:
          packages:
            - g++-5    
      env: _CC=gcc-5 _CXX=g++-5
    - os: linux
      addons:
        apt:
          packages:
            - g++-5    
      env: _CC=gcc-5 _CXX=g++-5 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          packages:
            - g++-6    
      env: _CC=gcc-6 _CXX=g++-6
    - os: linux
      addons:
        apt:
          packages:
            - g++-6    
      env: _CC=gcc-6 _CXX=g++-6 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          packages:
            - g++-7    
      env: _CC=gcc-7 _CXX=g++-7
    - os: linux
      addons:
        apt:
          packages:
            - g++-7    
      env: _CC=gcc-7 _CXX=g++-7 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          packages:
            - g++-7    
      env: _CC=gcc-7 _CXX=g++-7 _BUILD="-DCMAKE_CXX_STANDARD=17"
    - os: linux
      addons:
        apt:
          packages:
            - g++-8    
      env: _CC=gcc-8 _CXX=g++-8
    - os: linux
      addons:
        apt:
          packages:
            - g++-8    
      env: _CC=gcc-8 _CXX=g++-8 _BUILD="-DCMAKE_CXX_STANDARD=14"      
    - os: linux
      addons:
        apt:
          packages:
            - g++-8    
      env: _CC=gcc-8 _CXX=g++-8 _BUILD="-DCMAKE_CXX_STANDARD=17"        
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-9    
      env: _CC=gcc-9 _CXX=g++-9 
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-9
      env: _CC=gcc-9 _CXX=g++-9 _BUILD="-DCMAKE_CXX_STANDARD=14"    
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-9
      env: _CC=gcc-9 _CXX=g++-9 _BUILD="-DCMAKE_CXX_STANDARD=17"      
    - os: linux
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-9
      env: _CC=gcc-9 _CXX=g++-9 _BUILD="-DCMAKE_CXX_STANDARD=20"                 
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-3.9
          packages:
            - clang-3.9    
      env: _CC=clang-3.9 _CXX=clang++-3.9
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-3.9
          packages:
            - clang-3.9    
      env: _CC=clang-3.9 _CXX=clang++-3.9 _BUILD="-DCMAKE_CXX_STANDARD=14"      
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-4.0
          packages:
            - clang-4.0    
      env: _CC=clang-4.0 _CXX=clang++-4.0
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-4.0
          packages:
            - clang-4.0    
      env: _CC=clang-4.0 _CXX=clang++-4.0 _BUILD="-DCMAKE_CXX_STANDARD=14"      
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-5.0
          packages:
            - clang-5.0    
      env: _CC=clang-5.0 _CXX=clang++-5.0
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-5.0
          packages:
            - clang-5.0    
      env: _CC=clang-5.0 _CXX=clang++-5.0 _BUILD="-DCMAKE_CXX_STANDARD=14"    
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-5.0
          packages:
            - clang-5.0    
      env: _CC=clang-5.0 _CXX=clang++-5.0 _BUILD="-DCMAKE_CXX_STANDARD=17"          
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-6.0
          packages:
            - clang-6.0    
      env: _CC=clang-6.0 _CXX=clang++-6.0
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-6.0
          packages:
            - clang-6.0    
      env: _CC=clang-6.0 _CXX=clang++-6.0 _BUILD="-DCMAKE_CXX_STANDARD=14"  
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-6.0
          packages:
            - clang-6.0    
      env: _CC=clang-6.0 _CXX=clang++-6.0 _BUILD="-DCMAKE_CXX_STANDARD=17"           
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-7
          packages:
            - clang-7    
      env: _CC=clang-7 _CXX=clang++-7
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-7
          packages:
            - clang-7    
      env: _CC=clang-7 _CXX=clang++-7 _BUILD="-DCMAKE_CXX_STANDARD=14" 
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-7
          packages:
            - clang-7    
      env: _CC=clang-7 _CXX=clang++-7 _BUILD="-DCMAKE_CXX_STANDARD=17"       
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-8
          packages:
            - clang-8    
      env: _CC=clang-8 _CXX=clang++-8
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-8
          packages:
            - clang-8    
      env: _CC=clang-8 _CXX=clang++-8 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-8
          packages:
            - clang-8    
      env: _CC=clang-8 _CXX=clang++-8 _BUILD="-DCMAKE_CXX_STANDARD=17"    
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-8
          packages:
            - clang-8    
      env: _CC=clang-8 _CXX=clang++-8 _BUILD="-DCMAKE_CXX_STANDARD=20"  
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-9
          packages:
            - clang-9    
      env: _CC=clang-9 _CXX=clang++-9
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-9
          packages:
            - clang-9    
      env: _CC=clang-9 _CXX=clang++-9 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-9
          packages:
            - clang-9    
      env: _CC=clang-9 _CXX=clang++-9 _BUILD="-DCMAKE_CXX_STANDARD=17"    
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-9
          packages:
            - clang-9    
      env: _CC=clang-9 _CXX=clang++-9 _BUILD="-DCMAKE_CXX_STANDARD=20"  
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-10
          packages:
            - clang-10    
      env: _CC=clang-10 _CXX=clang++-10
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-10
          packages:
            - clang-10    
      env: _CC=clang-10 _CXX=clang++-10 _BUILD="-DCMAKE_CXX_STANDARD=14"
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-10
          packages:
            - clang-10    
      env: _CC=clang-10 _CXX=clang++-10 _BUILD="-DCMAKE_CXX_STANDARD=17"    
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-bionic-10
          packages:
            - clang-10    
      env: _CC=clang-10 _CXX=clang++-10 _BUILD="-DCMAKE_CXX_STANDARD=20"  

before_install:
  - sudo apt-get install libqt5serialport5-dev  -y  

script:
  - echo "------------------ Debug build ------------------"
  - mkdir build.debug
  - cd build.debug
  - CC=${_CC} CXX=${_CXX} cmake .. ${_BUILD} -DCMAKE_INSTALL_PREFIX=./install -DCC_BUILD_DEMO_PROTOCOL=ON
  - make install
  - ctest
  - cd ..
  - echo "------------------ Release build ------------------"  
  - mkdir build.release
  - cd build.release
  - CC=${_CC} CXX=${_CXX} cmake .. ${_BUILD} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./install -DCC_BUILD_DEMO_PROTOCOL=ON
  - make install
  - ctest
  - cd ..  
  - echo "------------------ MinSize Release build ------------------"  
  - mkdir build.min_size
  - cd build.min_size
  - CC=${_CC} CXX=${_CXX} cmake .. ${_BUILD} -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=./install -DCC_BUILD_DEMO_PROTOCOL=ON
  - make install
  - ctest
  - cd ..    

